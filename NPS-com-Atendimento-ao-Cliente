{
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "15cf44d5-0381-4b6c-8da2-7e16d7b40ea3",
      "name": "SerpAPI",
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "position": [
        -1180,
        460
      ],
      "typeVersion": 1,
      "credentials": {
        "serpApi": {
          "id": "Itmyn4aHYneLGsoN",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "5020426e-7355-4b7b-a314-b2ab21a2da51",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -1520,
        460
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "JYlZbzi8yvevqsbt",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "eb1139cb-75f4-486c-aac8-2c30a5edaf16",
              "leftValue": "={{ $json.body.data.key.remoteJid }}",
              "rightValue": "@g.us",
              "operator": {
                "type": "string",
                "operation": "endsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1460,
        -820
      ],
      "id": "295f4915-7ce5-4b37-88ac-be02e56f03cf",
      "name": "If (Verifica Contato)"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "869dd0cc-d362-464c-9e82-0e137bee5fd5",
              "leftValue": "={{ $('Webhook').item.json.body.data.message.conversation }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            },
            {
              "id": "0d8f2ba9-7696-4080-b0e3-7f123dbe3452",
              "leftValue": "={{ $('Webhook').item.json.body.data.message.conversation }}",
              "rightValue": 10,
              "operator": {
                "type": "number",
                "operation": "lte"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1700,
        -280
      ],
      "id": "edba9bc3-f8a8-48ce-97bb-3091f2ec7dd5",
      "name": "If (Mensagem ou Nota)",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1640,
        240
      ],
      "id": "15719766-638e-468e-aa58-ba0886483e5a",
      "name": "Conversa"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f82892ad-1b1e-4a11-b168-3869b530c196",
              "leftValue": "={{ $json.ClienteEncontrado }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -820,
        -800
      ],
      "id": "9f58ae2b-6c38-4187-9e74-56e1948c4a28",
      "name": "Verificar se o cliente esta no banco de dados"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT TOP 1 -- Adicionei TOP 1 para garantir que ele traga apenas a OS mais recente para este cliente\n    OS.Ordem AS OSsistema,\n    C.Nome AS NomeCliente, -- Nome do Cliente\n    ISNULL(NULLIF(C.Fone1, ''), C.Fone2) AS TelefoneCliente, -- Telefone do Cliente\n    OS.DataFechamento, -- Adicionei novamente para que você possa usar, se precisar\n    OS.ObservaçõesFechamento AS ServicoRealizado -- Adicionei para pegar o serviço realizado\nFROM\n    OSs OS\nJOIN\n    Clientes C ON C.CodCliente = OS.Cliente\nWHERE\n    OS.Status = 'B' -- Mantém o filtro de status da OS (Fechada, por exemplo)\n    AND OS.DataFechamento IS NOT NULL\n    AND OS.N8Nstatus IN (0, 2)\n    -- *** AQUI ESTÁ A ADIÇÃO CRUCIAL ***\n    AND (C.Fone1 = '{ { $json.telefoneClienteLimpo } }' OR C.Fone2 = '{ { $json.telefoneClienteLimpo } }')\nORDER BY\n    OS.DataFechamento DESC, -- Ordem decrescente pela data e ordem para pegar a mais recente\n    OS.Ordem DESC;"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        -580,
        -820
      ],
      "id": "57cc58cf-ac7b-43e9-82a8-03f8d86464db",
      "name": "Microsoft SQL1",
      "credentials": {
        "microsoftSql": {
          "id": "pNBSzthhOjrzeBje",
          "name": "Microsoft SQL account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// SUBSTITUA TODO O CONTEÚDO DO SEU NÓ 'CODE' POR ESTE CÓDIGO:\n\nconst outputItems = [];\nconst inputData = $input.all(); // Pega todos os itens de entrada de forma robusta\n\nfor (const item of inputData) {\n    let telefoneBruto = '';\n\n    // Tenta ler o remoteJid de vários caminhos comuns, priorizando a estrutura padrão do n8n (item.json)\n    if (item.json) {\n        telefoneBruto = item.json.body?.data?.key?.remoteJid ||\n                        item.json.data?.key?.remoteJid || // Caminho sem 'body'\n                        item.json.key?.remoteJid ||       // Caminho sem 'data'\n                        item.json.remoteJid ||            // Caminho direto\n                        ''; // Valor padrão vazio se não encontrar\n    } else {\n        // Se item.json NÃO existe, assume que 'item' É o payload JSON bruto\n        telefoneBruto = item.body?.data?.key?.remoteJid ||\n                        item.data?.key?.remoteJid ||\n                        item.key?.remoteJid ||\n                        item.remoteJid ||\n                        ''; // Valor padrão vazio se não encontrar\n    }\n\n    let telefoneLimpo = '';\n    if (telefoneBruto) {\n        telefoneLimpo = telefoneBruto.replace(/[^0-9]/g, ''); // Remove tudo que não for dígito\n    }\n\n    // --- AGORA, CONSTRUÍMOS A QUERY SQL COMPLETA AQUI MESMO ---\n    // CORREÇÃO AQUI: REMOVIDAS AS TAGS HTML E BARRAS INVERTIDAS EXTRAS\n    const sqlQueryVerificacaoCliente = `\n        SELECT COUNT(C.CodCliente) AS ClienteEncontrado\n        FROM Clientes C (NOLOCK)\n        WHERE (C.Fone1 = '${telefoneLimpo}' OR C.Fone2 = '${telefoneLimpo}');\n    `;\n\n    // Adiciona a query SQL completa e pronta para execução ao item.\n    // O próximo nó SQL vai apenas pegar essa string e executar.\n    if (item.json) {\n        item.json.sqlQueryClienteVerificacao = sqlQueryVerificacaoCliente;\n        // Mantém o telefone limpo no item.json para uso posterior\n        item.json.telefoneClienteLimpo = telefoneLimpo;\n    } else {\n        item.sqlQueryClienteVerificacao = sqlQueryVerificacaoCliente;\n        // Mantém o telefone limpo no item para uso posterior\n        item.telefoneClienteLimpo = telefoneLimpo;\n    }\n\n    outputItems.push(item);\n}\n\nreturn outputItems;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1220,
        -780
      ],
      "id": "8064037b-8b50-456c-81f3-ef6c62bfd070",
      "name": "Code"
    },
    {
      "parameters": {
        "sendTo": "sistemas@ramosgrupo.com.br",
        "subject": "=Relatório de Avaliação Negativa - Ordem de Serviço: {{ $('Dados').item.json.os }}",
        "message": "=<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"utf-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <title>Ordem de Serviço - CearaGPS</title>\n        <meta name=\"description\" content=\"\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <link rel=\"stylesheet\" href=\"\">\n    <title>Ordem de Serviço - CearaGPS</title>\n    </head>\n    <style>\n        body {\n            background: #fff3ea;\n            font-family: 'Segoe UI', Arial, sans-serif;\n            color: #01335B;\n        }\n        .container {\n            max-width: 540px;\n            margin: 38px auto;\n            background: #fff;\n            border-radius: 18px;\n            box-shadow: 0 6px 26px rgba(243, 112, 33, 0.07);\n            padding: 38px 32px 18px 32px;\n            border: 2px solid #F37021;\n        }\n        .logo-cearagps {\n            display: block;\n            margin: 0 auto 26px auto;\n            max-width: 190px;\n        }\n        h1 {\n            font-size: 1.65rem;\n            color: #007bc1;\n            text-align: center;\n            margin-bottom: 20px; /* Ajustado o margin-bottom pois o subtítulo foi removido */\n            font-weight: 700;\n            letter-spacing: -0.5px;\n        }\n        /* O subtítulo foi removido, então a classe .subtitle pode ser removida ou comentada se não for mais usada\n        .subtitle {\n            text-align: center;\n            color: #007bc1;\n            font-size: 1.13rem;\n            margin-bottom: 20px;\n            font-weight: 500;\n        }\n        */\n        .details {\n            background: #fff7f1;\n            border: 2px solid #F37021;\n            border-radius: 25px;\n            padding: 20px 18px 13px 18px;\n            margin-bottom: 16px;\n        }\n        .details-row {\n            display: flex;\n            justify-content: flex-start;\n            align-items: center;\n            margin-bottom: 15px;\n        }\n        .details-row strong {\n            min-width: 130px; /* Ajustado para acomodar textos maiores como \"Ordem de serviço:\" */\n            color: #007bc1;\n            font-weight: 600;\n            font-size: 1.04rem;\n            text-align: left;\n        }\n        .details-row .value {\n            color: #01335B;\n            font-size: 1.03rem;\n            font-weight: 500;\n        }\n        .highlight { /* Usado para a Nota */\n            color: #F37021;\n            font-weight: bold;\n            font-size: 1.18rem;\n        }\n        /* A classe .status-chip não é mais necessária para os novos campos, pode ser removida ou comentada\n        .status-chip {\n            display: inline-flex;\n            align-items: center;\n            background: #fff3ea;\n            color: #F37021;\n            border-radius: 16px;\n            font-weight: 700;\n            font-size: 1.00rem;\n            padding: 4px 15px;\n            border: 1.5px solid #F37021;\n            margin-left: 6px;\n        }\n        .status-chip svg {\n            width: 16px;\n            height: 16px;\n            margin-right: 7px;\n            color: #F37021;\n        }\n        */\n        .footer {\n            margin-top: 18px;\n            text-align: center;\n            font-size: 1.20rem;\n            color: #839bb3;\n        }\n        .footer strong {\n            color: #F37021;\n        }\n        @media (max-width: 650px) {\n            .container { padding: 15px 3vw 6px 3vw; }\n            .logo-cearagps { max-width: 120px; }\n            .details-row strong { min-width: 110px; font-size: .96rem; } /* Ajustado para responsividade */\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <img class=\"logo-cearagps\" src=\"https://cearagps.com.br/wp-content/uploads/2022/10/logo_cearagps.png\" alt=\"Logo CearaGPS\">\n        <h1>Detalhes da Ordem de Serviço</h1>\n        <div class=\"details\">\n            <div class=\"details-row\">\n                <strong>Ordem de Serviço:</strong>\n                <span class=\"value\">{{ $('Dados').item.json.os }}</span>\n            </div>\n            <div class=\"details-row\">\n                <strong>Nome do cliente:</strong>\n                <span class=\"value\">{{ $('Dados').item.json['Nome '] }}</span>\n            </div>\n            <div class=\"details-row\">\n                <strong>Nota:</strong>\n                <span class=\"highlight\">{{ $('Dados').item.json.Nota }}</span>\n            </div>\n        <br>\n         <div>\n            <p style=\"margin: bottom 8px;\">Este é um resumo dos detalhes da ordem de serviço e da valiação do cliente.</p>\n        </div>\n        <div class=\"footer\">\n            Atenciosamente,<br>\n            <strong>Setor de TI CearaGPS</strong>\n        </div>\n    </div>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -580,
        -480
      ],
      "id": "836a2fdb-bbf3-474f-8dc4-fa2c5af753ea",
      "name": "Enviar email (nota baixa)",
      "webhookId": "483d615d-ba69-4218-9bd3-bb2de1f9b7c0",
      "credentials": {
        "gmailOAuth2": {
          "id": "5Ulh1D7zAK9TBzlD",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6a12b365-4132-4017-bc2f-e872ff9af0d7",
              "leftValue": "={{ $json.Nota }}",
              "rightValue": 9,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1180,
        -120
      ],
      "id": "54b6afed-8898-4f81-8145-00372b6567d5",
      "name": "IF - Nota Ótima (9-10)"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6a12b365-4132-4017-bc2f-e872ff9af0d7",
              "leftValue": "={{ $json.Nota }}",
              "rightValue": 4,
              "operator": {
                "type": "number",
                "operation": "lte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1180,
        -460
      ],
      "id": "bfa480a2-87eb-40d6-aa5a-0c62792828a6",
      "name": "IF - Nota Ruim (1-4)"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6a12b365-4132-4017-bc2f-e872ff9af0d7",
              "leftValue": "={{ $json.Nota }}",
              "rightValue": 5,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            },
            {
              "id": "fdc9d754-8178-425f-aa3c-31394b1f9f02",
              "leftValue": "={{ $json.Nota }}",
              "rightValue": 8,
              "operator": {
                "type": "number",
                "operation": "lte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1180,
        -300
      ],
      "id": "5a33c507-7152-42ba-ae52-9898f3815fad",
      "name": "IF - Nota Média (5-8)"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('Dados').item.json['Instancia '] }}",
        "remoteJid": "={{ $('Code').item.json.telefoneClienteLimpo }}",
        "messageText": "=Muito obrigado pelo seu Feedback, fez valer a pena o nosso esforço em sermos cada vez melhores. Pensando na sua experiência, indique um amigo para conhecer os nossos serviços e avalie a nossa empresa no Google.\"\nGoogle: https://g.co/kgs/6toHpnr",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -960,
        -140
      ],
      "id": "b1b863e8-3ec2-4894-92f8-3364873c5963",
      "name": "Evolution API8",
      "credentials": {
        "evolutionApi": {
          "id": "GiAYG7WVfZusxjWC",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('Dados').item.json['Instancia '] }}",
        "remoteJid": "={{ $('Code').item.json.telefoneClienteLimpo }}",
        "messageText": "=Recebemos sua avaliação de Nota {{ $('Dados').item.json.Nota }}. Agradecemos muito seu feedback, pois ele é fundamental para aprimorarmos nossos serviços. Vamos dar nosso melhor para que nossa nota seja 10",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -960,
        -320
      ],
      "id": "acc1796f-e35a-40e0-9048-2f760accbb0c",
      "name": "Evolution API7",
      "credentials": {
        "evolutionApi": {
          "id": "GiAYG7WVfZusxjWC",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('Dados').item.json['Instancia '] }}",
        "remoteJid": "={{ $('Code').item.json.telefoneClienteLimpo }}",
        "messageText": "=Sentimos muito pela sua experiência. Gostaríamos de entender o que aconteceu.😕 Nossa equipe entrará em contato para entender melhor a situação.",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -960,
        -480
      ],
      "id": "e52080c2-18a1-4533-9ec8-f5947a642a13",
      "name": "Evolution API6",
      "credentials": {
        "evolutionApi": {
          "id": "GiAYG7WVfZusxjWC",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "{{ $json.sqlQueryClienteVerificacao }}"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        -1020,
        -780
      ],
      "id": "d669714d-3357-4eb6-b86b-8f7ac63ed63a",
      "name": "Microsoft SQL",
      "credentials": {
        "microsoftSql": {
          "id": "pNBSzthhOjrzeBje",
          "name": "Microsoft SQL account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "19e0d62d-d7fc-40f5-8ab7-f8175b015329",
              "name": "Nome ",
              "value": "={{ $json.NomeCliente }}",
              "type": "string"
            },
            {
              "id": "6a9a5a13-bbdb-442c-9af5-bcc06c1af75d",
              "name": "Numero",
              "value": "={{ $json.TelefoneCliente }}",
              "type": "string"
            },
            {
              "id": "161bdb2c-901e-48da-a19b-a97074c8058c",
              "name": "Nota",
              "value": "={{ $('Webhook').item.json.body.data.message.conversation }}",
              "type": "number"
            },
            {
              "id": "e1eac6dd-d9cd-4e0b-9696-9ec3932c6f3b",
              "name": "Instancia ",
              "value": "={{ $('Webhook').item.json.body.instance }}",
              "type": "string"
            },
            {
              "id": "8c18812a-a120-4596-b382-ff7513219e3f",
              "name": "id da mensagem",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "1bbd9a15-953c-4a8f-9c9b-1744f7f565aa",
              "name": "os",
              "value": "={{ $json.OSsistema }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1460,
        -300
      ],
      "id": "14084daa-a8b1-47ab-ad36-90175f1af5e1",
      "name": "Dados",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "showdaia",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1680,
        -820
      ],
      "id": "a7da807e-45e9-4051-9a22-7351f339c6f0",
      "name": "Webhook",
      "webhookId": "e5509289-f619-4353-8c32-17b80fcc7906"
    },
    {
      "parameters": {
        "content": "## 1. Recebimento da nota e verificação do cliente no banco de dados",
        "height": 340,
        "width": 1380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1720,
        -940
      ],
      "id": "b44dbf47-a6ef-4315-b6f5-da24ae2bddf8",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## 2. Verificação da nota, envio de mensagem e atualização de planilha com o feedback",
        "height": 580,
        "width": 1380
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1720,
        -560
      ],
      "typeVersion": 1,
      "id": "a8e79821-71fc-40cf-9b47-c5dff93b7149",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## 3. Agente IA para tratar do cliente",
        "height": 620,
        "width": 2080,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1720,
        60
      ],
      "typeVersion": 1,
      "id": "7623cbe4-15aa-4716-b82c-9d931856a882",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Webhook').item.json.body.data.key.remoteJid }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -1360,
        460
      ],
      "id": "cfb6bdce-182d-4fee-802a-193fd7637979",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/text-to-speech/UgBBYS2sOqTuMpoF3BR0",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "output_format",
              "value": "mp3_44100_128"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "=sk_cb397d1d550bc230d9df66377184fd651c3c4e40f6066ec8"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $('Loop Over Items').item.json.text.replaceAll('**', '*') }}"
            },
            {
              "name": "model_id",
              "value": "eleven_multilingual_v2"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -260,
        420
      ],
      "id": "f6e5c149-f16d-4d96-b566-c7630fbeb223",
      "name": "Eleven Labs1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.randomNumber }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "114bca16-4241-43b4-9017-7f1e791a2b16",
                    "leftValue": "={{ $json.randomNumber }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b274180e-e92f-4562-8d5e-b8bd3dccb55b",
                    "leftValue": "={{ $json.randomNumber }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5ff762af-4df5-4cc3-a8b5-ee10b3bed4b6",
                    "leftValue": "={{ $json.randomNumber }}",
                    "rightValue": 4,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -180,
        140
      ],
      "id": "0c271b1d-9975-41b4-a8a4-27ca72303bd0",
      "name": "Switch1"
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -60,
        420
      ],
      "id": "e681eaf7-adf5-4a2a-a950-1b7ade6d7869",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "jsCode": "function generateRandomNumber() {\n    return Math.floor(Math.random() * 4) + 1;\n}\n\nreturn [{ json: { randomNumber: generateRandomNumber() } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -600,
        340
      ],
      "id": "ffc24fdb-854a-4fa5-9ef3-12c49f92347a",
      "name": "Número Aleatório1"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "=TesteVi",
        "remoteJid": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ $('Loop Over Items').item.json.text }}",
        "options_message": {
          "delay": 5000
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        140,
        120
      ],
      "id": "a2770780-e934-4fb4-8990-9f1a5edcfeb3",
      "name": "Evolution API2",
      "credentials": {
        "evolutionApi": {
          "id": "GiAYG7WVfZusxjWC",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "operation": "send-audio",
        "instanceName": "=TesteVi",
        "remoteJid": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "media": "={{ $json.data }}",
        "options_message": {
          "delay": 5000
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        140,
        420
      ],
      "id": "f9022e40-f4ea-4472-bdb4-f442470025db",
      "name": "Evolution API3",
      "credentials": {
        "evolutionApi": {
          "id": "GiAYG7WVfZusxjWC",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -800,
        240
      ],
      "id": "a45881ec-3c27-4d7c-b9a4-38d22685e3df",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -600,
        120
      ],
      "id": "bf05cb4a-f2bb-4a42-b8e7-0d5c93492dd3",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "jsCode": "/**\n * Divide o texto de cada item em frases individuais e as agrupa em mensagens de até 3 frases,\n * ignorando números e URLs como delimitadores.\n * Cada grupo de frases é retornado como um novo item em um array.\n *\n * @param {Array<Object>} items - Um array de objetos, onde cada objeto pode ter um campo 'json.output' contendo o texto a ser dividido.\n * @returns {Array<Object>} Um array de objetos, onde cada objeto contém um grupo de frases no campo 'json.text',\n * ou um erro se o campo 'output' estiver ausente.\n */\nfunction splitTextSafely(items) {\n    const result = [];\n\n    items.forEach(item => {\n        // Acessa o campo 'output' dinamicamente, ou uma string vazia se não existir.\n        const text = item.json?.output || '';\n\n        // Se o texto estiver vazio, adiciona um objeto de erro ao resultado.\n        if (!text) {\n            result.push({ json: { error: \"No output field provided in input.\" } });\n            return; // Pula para o próximo item\n        }\n\n        // Expressão regular para corresponder a delimitadores de frase válidos\n        // enquanto ignora números e URLs.\n        // - `(?<!\\d)`: Não precede um dígito (evita dividir números como \"1.2\").\n        // - `(?<=[.!?])`: Precede um ponto final, ponto de interrogação ou exclamação.\n        // - `\\s+`: Seguido por um ou mais espaços em branco.\n        // - `(?!\\d)`: Não seguido por um dígito (evita dividir URLs ou números de versão).\n        // - `|`: OU\n        // - `\\s+(?=https?:\\/\\/)`: Espaços em branco seguidos por \"http://\" ou \"https://\" (para manter URLs intactas).\n        const regex = /(?<!\\d)(?<=[.!?])\\s+(?!\\d)|\\s+(?=https?:\\/\\/)/g;\n\n        // Divide o texto com base na expressão regular, remove espaços em branco extras\n        // e filtra quaisquer strings vazias resultantes.\n        const sentences = text.split(regex).map(sentence => sentence.trim()).filter(Boolean);\n\n        // Agrupa as frases em mensagens de até 3\n        for (let i = 0; i < sentences.length; i += 3) {\n            // Pega um grupo de até 3 frases\n            const chunk = sentences.slice(i, i + 3);\n            // Junta as frases do grupo com um espaço\n            const combinedSentence = chunk.join(' ');\n            // Adiciona o grupo combinado ao resultado\n            result.push({ json: { text: combinedSentence } });\n        }\n    });\n\n    return result;\n}\n\n// Executa a função com a entrada dinâmica de um nó anterior (assumindo que 'items' é fornecido).\n// Esta linha seria usada em um ambiente onde a função é executada e seu retorno é o resultado final.\nreturn splitTextSafely(items);\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1060,
        240
      ],
      "id": "bc72199d-810a-4362-992b-6134a8eba894",
      "name": "Dividir saidas1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Webhook').item.json.body.data.message.conversation }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Prompt para Assistente Virtual Zé da Rota (CearaGPS):\n\"Você é o Zé da Rota, o assistente virtual especialista da CearaGPS (www.cearagps.com.br). Sua principal missão é tirar dúvidas sobre a empresa, nossos planos de rastreamento e proteção veicular, e outras informações relacionadas ao nosso ramo de atuação, com o objetivo final de qualificar leads e conduzir o cliente até a etapa de fechamento de contrato com um consultor humano.\n\nPersona e Tom de Voz:\nAja como um especialista em vendas de segurança automotiva, sendo o MAIS HUMANO POSSÍVEL em suas interações, mas mantendo profissionalismo e cordialidade. Evite ser robótico. Sua comunicação deve ser clara, amigável, direta, assertiva e eficiente. Seu objetivo é deixar o cliente ciente de todos os benefícios e pontos fortes da CearáGPS, superar objeções com táticas de venda e prepará-lo para o fechamento.\n\nSobre a CearaGPS e Grupo Ramos (Contexto para suas conversas):\n\nA CearaGPS foi fundada em 2012 por Euram Ramos, nosso presidente, após ele mesmo ser vítima de um roubo de veículo. Esse evento intensificou seu desejo de ajudar o próximo e combater a criminalidade.\nA empresa começou na garagem da casa dos pais dele e hoje é referência no Brasil em rastreamento e proteção veicular.\nO sucesso levou à criação da CRX Brasil (há mais de 10 anos oferecendo soluções para empresários do ramo, top 05 no Brasil) e, mais recentemente, da Resolve Proteção Veicular. O grupo também foi pioneiro em mentorias e imersões educacionais em mais de 18 estados.\nInformações da Empresa (para consulta e fornecimento ao cliente):\n\nContato Principal: Central de Atendimento 24h: 0800 606 8153 ou (85) 3484.6006\nHorários de funcionamento presencial:\nSegunda a quinta: 08:00 às 20:00\nSexta-feira: 08:00 às 19:00\nSábado: 08:00 às 16:00\nDúvidas ou sugestões (e-mail): contato@cearagps.com.br\nFinanceiro (e-mail e WhatsApp): financeiro@cearagps.com.br | (85) 98208.2489\nWhatsApp Geral: (85) 98208.2489\nEndereço: R. A, Nº 981 – Parque Dois Irmãos, Fortaleza – CE, 60540-256\nSua Missão Detalhada:\n\nAuxiliar clientes na escolha do plano adequado para rastreamento e proteção veicular.\nInteragir com ferramentas de API (n8n) para consultar a Placa FIPE, trazendo apenas os planos compatíveis com o veículo informado.\nPromover um atendimento ágil, direto e eficiente.\nEncaminhar clientes interessados para um consultor humano quando necessário.\n🛠️ REGRAS ESSENCIAIS DE ATENDIMENTO:\n\n1️⃣ Consulta da Placa FIPE e Retorno de Planos:\n\nSEMPRE que o cliente informar a placa do veículo, você deve acionar o fluxo do n8n para consulta FIPE.\nRetorne APENAS os planos compatíveis com base em:\n✅ Valor do bem (para definir a cobertura do plano de proteção)\n✅ Tipo de veículo (Carro ou Moto)\n✅ Planos adequados para aquele veículo específico.\nExemplo:\n👤 Cliente: \"Quais planos vocês têm para meu carro?\"\n🤖 Zé da Rota: \"Posso verificar os planos ideais para o seu veículo! Para isso, me informe a placa do carro, por favor. 🔍\"\n(Após consulta FIPE via n8n, retorne apenas planos compatíveis)\nSe a consulta não for possível ou o cliente não quiser informar a placa, pergunte:\n❓ \"Tudo bem! Você pode me dizer o modelo e ano do seu veículo? Assim, consigo te apresentar os planos mais adequados.\"\n2️⃣ Estrutura de Respostas:\n\n✅ Seja direto, amigável e objetivo. Evite textos longos ou excessivamente técnicos.\n✅ Use emojis moderadamente (🚗🔍📲) para tornar a conversa mais leve.\n✅ Sempre busque capturar a intenção do cliente antes de apresentar planos.\n✅ Sempre responda com uma pergunta para manter o cliente engajado e a conversa fluindo.\n✅ Caso o cliente traga um assunto fora do escopo (ex: seguro tradicional), redirecione a conversa para rastreamento e proteção veicular.\nExemplo:\n👤 Cliente: \"Vocês fazem seguro também?\"\n🤖 Zé da Rota: \"Nós somos especialistas em rastreamento e proteção contra roubo e furto! Nosso serviço inclui rastreamento 24h e até 100% de cobertura da Tabela FIPE. Posso verificar os planos ideais para o seu veículo?\"\n3️⃣ Planos e Benefícios da Ceará GPS (Apresente SOMENTE os compatíveis após consulta FIPE):\n\n📌 **Planos para Motos** (Válido para residentes de Fortaleza, Caucaia, Eusébio, Maracanaú, Aquiraz, Itaitinga, Pacatuba e Maranguape):\n* Rastreamento + Proteção Veicular (Cobertura 10 MIL) – R$ 85,00/mês\n* Rastreamento + Proteção Veicular (Cobertura 20 MIL) – R$ 105,00/mês\n* Rastreamento + Proteção Veicular (Cobertura 30 MIL) – R$ 120,00/mês\n* Instalação: R$ 200,00\n\n📌 **Planos para Carros** (Válido para residentes de Fortaleza, Caucaia, Eusébio, Maracanaú, Aquiraz, Itaitinga, Pacatuba e Maranguape):\n* Rastreamento + Proteção Veicular (Cobertura 30 MIL) – R$ 130,00/mês\n* Rastreamento + Proteção Veicular (Cobertura 40 MIL) – R$ 150,00/mês\n* Rastreamento + Proteção Veicular (Cobertura 60 MIL) – R$ 179,90/mês\n* Instalação: R$ 200,00\n\n🛡️ **Diferenciais da CearáGPS (Destaque-os!):**\n* ✔ Monitoramento 24h em tempo real\n* ✔ Acesso via aplicativo (Android & iOS)\n* ✔ Bloqueio remoto do veículo (abaixo de 10km/h por segurança)\n* ✔ Central de atendimento 0800 24h\n* ✔ Equipe de recuperação de veículos própria e integrada à Polícia\n* ✔ Cobertura de até 100% da Tabela FIPE em caso de roubo/furto não recuperado\n4️⃣ Chamadas para Ação (CTAs) e Fechamento:\n\nPara engajar e qualificar:\n\"Gostaria de consultar um plano ideal para seu veículo? Me informe a placa que eu verifico para você! 🔍\"\n\"Podemos prosseguir com a contratação do rastreamento? Assim, já garantimos sua proteção.\"\n\"Queremos deixar seu veículo seguro! Vamos seguir com a instalação?\"\nSe o cliente quiser proposta formal:\n\"Posso te enviar a proposta por WhatsApp ou E-mail? Em breve, um consultor especializado entrará em contato para te explicar todos os detalhes!\"\nSe o cliente quiser comparar com concorrente:\n\"Entendo! Podemos te ajudar a comparar os benefícios e vantagens do nosso serviço com a proposta que recebeu. O que considera mais importante na sua escolha?\"\n5️⃣ Respostas Ajustadas para Situações Específicas:\n\nCliente diz que vai pensar:\n🤖 Zé da Rota: \"Claro! Se precisar de mais informações, estou por aqui para te ajudar. Enquanto isso, posso te enviar um resumo dos planos para facilitar sua análise?\"\nCliente solicita um orçamento em PDF:\n🤖 Zé da Rota: \"Sim, posso te enviar a proposta por WhatsApp ou E-mail. Qual a melhor forma para você receber?\"\nCliente menciona um concorrente (proposta mais barata):\n🤖 Zé da Rota: \"Entendo! Nossos planos incluem rastreamento e proteção com equipe própria de recuperação e cobertura de até 100% da Tabela FIPE. Posso te ajudar a comparar as vantagens e ver como nosso custo-benefício é superior?\"\nCliente pede instalação fora das cidades atendidas:\n🤖 Zé da Rota: \"Atualmente, nossa instalação padrão cobre Fortaleza e região metropolitana (Caucaia, Eusébio, Maracanaú, Aquiraz, Itaitinga, Pacatuba e Maranguape). Mas, dependendo da sua localização exata, podemos verificar uma possibilidade de instalação para você! Qual seria a cidade?\"\nCliente pergunta sobre bloqueio remoto:\n🤖 Zé da Rota: \"Sim, nosso sistema possui bloqueio remoto! Para sua segurança e a do veículo, o bloqueio é efetivado quando o veículo está abaixo de 10km/h. Isso evita acidentes e garante uma parada segura. Quer saber mais sobre como essa funcionalidade te protege?\"\nCliente quer rastrear um veículo que não é dele:\n🤖 Zé da Rota: \"Sim, é possível! O plano pode ser contratado por qualquer pessoa, mesmo que o veículo não esteja no seu nome. No entanto, é importante saber que, em caso de sinistro (roubo ou furto não recuperado), a indenização será paga ao proprietário legal do veículo, conforme consta no documento, tudo bem?\"\n📢 Conclusão e Lembretes Finais:\n\n✅ Prioridade Máxima: Sempre consulte a Placa FIPE via n8n (ou peça modelo/ano) ANTES de oferecer planos.\n✅ Foco no Cliente: Responda de forma clara, objetiva e sempre incentive o cliente a avançar no funil de vendas.\n✅ Proatividade: Utilize chamadas para ação para aumentar as conversões.\n✅ Precisão: Evite oferecer planos que não se aplicam ao veículo consultado.\n✅ Encaminhamento: Direcione clientes interessados e qualificados para um consultor humano para o fechamento quando o lead estiver maduro ou solicitar explicitamente.\nSeu objetivo é ser o melhor especialista em proteção veicular, ajudando cada cliente a encontrar a segurança que precisa com a CearaGPS!\""
        }
      },
      "id": "0f07f0e1-88e5-46b2-9bdd-f1899fbcbad1",
      "name": "Zé da Rota",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -1420,
        240
      ],
      "typeVersion": 1.8
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1w4W4qVK7g8mvdv3M14Gsq4StrBmCSA8FPe6B7sngMyc",
          "mode": "list",
          "cachedResultName": "NPS_TECNICO",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w4W4qVK7g8mvdv3M14Gsq4StrBmCSA8FPe6B7sngMyc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Página1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w4W4qVK7g8mvdv3M14Gsq4StrBmCSA8FPe6B7sngMyc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Nota": "={{ $('Dados').item.json.Nota }}",
            "OS": "={{ $('Dados').item.json.os }}",
            "Nome": "={{ $('Dados').item.json['Nome '] }}"
          },
          "matchingColumns": [
            "Nota"
          ],
          "schema": [
            {
              "id": "OS",
              "displayName": "OS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Nome",
              "displayName": "Nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nota",
              "displayName": "Nota",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -760,
        -480
      ],
      "id": "a1895fe1-0a7f-4315-a452-27cb5fd54730",
      "name": "SAC",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Q0rDGbFqayibPO3n",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1w4W4qVK7g8mvdv3M14Gsq4StrBmCSA8FPe6B7sngMyc",
          "mode": "list",
          "cachedResultName": "NPS_TECNICO",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w4W4qVK7g8mvdv3M14Gsq4StrBmCSA8FPe6B7sngMyc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Página1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w4W4qVK7g8mvdv3M14Gsq4StrBmCSA8FPe6B7sngMyc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Nota": "={{ $('Dados').item.json.Nota }}",
            "OS": "={{ $('Dados').item.json.os }}",
            "Nome": "={{ $('Dados').item.json['Nome '] }}"
          },
          "matchingColumns": [
            "Nota"
          ],
          "schema": [
            {
              "id": "OS",
              "displayName": "OS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Nome",
              "displayName": "Nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nota",
              "displayName": "Nota",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -760,
        -220
      ],
      "id": "737dfcfa-15ab-450d-8477-cfb099fdda12",
      "name": "SAC1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Q0rDGbFqayibPO3n",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "connections": {
    "SerpAPI": {
      "ai_tool": [
        [
          {
            "node": "Zé da Rota",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Zé da Rota",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If (Verifica Contato)": {
      "main": [
        [],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If (Mensagem ou Nota)": {
      "main": [
        [
          {
            "node": "Dados",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Conversa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversa": {
      "main": [
        [
          {
            "node": "Zé da Rota",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar se o cliente esta no banco de dados": {
      "main": [
        [
          {
            "node": "Microsoft SQL1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If (Mensagem ou Nota)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL1": {
      "main": [
        [
          {
            "node": "If (Mensagem ou Nota)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Microsoft SQL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - Nota Ótima (9-10)": {
      "main": [
        [
          {
            "node": "Evolution API8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - Nota Ruim (1-4)": {
      "main": [
        [
          {
            "node": "Evolution API6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - Nota Média (5-8)": {
      "main": [
        [
          {
            "node": "Evolution API7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API8": {
      "main": [
        [
          {
            "node": "SAC1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API7": {
      "main": [
        [
          {
            "node": "SAC1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API6": {
      "main": [
        [
          {
            "node": "SAC",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL": {
      "main": [
        [
          {
            "node": "Verificar se o cliente esta no banco de dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados": {
      "main": [
        [
          {
            "node": "IF - Nota Ótima (9-10)",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF - Nota Média (5-8)",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF - Nota Ruim (1-4)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "If (Verifica Contato)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Zé da Rota",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Eleven Labs1": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Evolution API2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evolution API2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Eleven Labs1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Eleven Labs1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Evolution API3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Número Aleatório1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API2": {
      "main": [
        []
      ]
    },
    "Evolution API3": {
      "main": [
        []
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Número Aleatório1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dividir saidas1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zé da Rota": {
      "main": [
        [
          {
            "node": "Dividir saidas1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SAC": {
      "main": [
        [
          {
            "node": "Enviar email (nota baixa)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "236ea3e345741561adb33e8e53eda3f202d862bd9cf39f8f167fdd51eff339a0"
  }
}
